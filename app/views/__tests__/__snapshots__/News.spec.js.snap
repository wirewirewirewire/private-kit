// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "#FFF",
      "color": "#000",
      "flex": 1,
      "flexDirection": "column",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "borderBottomColor": "rgba(189, 195, 199,0.6)",
        "borderBottomWidth": 1,
        "flexDirection": "row",
        "height": 60,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "height": 60,
          "opacity": 1,
          "paddingLeft": 20,
          "paddingTop": 21,
          "width": 60,
        }
      }
    >
      <Image
        source={
          Object {
            "testUri": "../../../app/assets/images/backArrow.png",
          }
        }
        style={
          Object {
            "height": 18,
            "width": 18.48,
          }
        }
      />
    </View>
    <Text
      style={
        Object {
          "fontFamily": "OpenSans-Bold",
          "fontSize": 24,
        }
      }
    >
      Latest News
    </Text>
  </View>
  <View
    style={
      Array [
        Object {
          "flex": 1,
          "overflow": "hidden",
        },
        undefined,
      ]
    }
  >
    <RNCWebView
      cacheEnabled={true}
      javaScriptEnabled={true}
      messagingEnabled={false}
      onContentProcessDidTerminate={[Function]}
      onHttpError={[Function]}
      onLoad={[Function]}
      onLoadingError={[Function]}
      onLoadingFinish={[Function]}
      onLoadingProgress={[Function]}
      onLoadingStart={[Function]}
      onMessage={[Function]}
      onShouldStartLoadWithRequest={[Function]}
      source={
        Object {
          "uri": "https://privatekit.mit.edu/views",
        }
      }
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          Object {
            "backgroundColor": "#ffffff",
          },
          Object {
            "marginTop": 15,
          },
        ]
      }
      useSharedProcessPool={true}
    />
  </View>
  <ActivityIndicator
    animating={true}
    color="#999999"
    hidesWhenStopped={true}
    size="large"
    style={
      Object {
        "left": 375,
        "position": "absolute",
        "top": 667,
      }
    }
  />
</RCTSafeAreaView>
`;
